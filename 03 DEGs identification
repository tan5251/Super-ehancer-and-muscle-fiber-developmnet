
##DEG-identification
library(DESeq2)
rm(list=ls())
data <- read.csv(file = "./counts.csv",header = T,sep=",",row.names = 1)
data$id <- row.names(data) 
#data2 <-  data1[apply(data1,1,function(x){sum(x)>10}),]
# data1 <-data [,c(4:6,1:3)]
colnames(data1) <- c("SOL_1","SOL_2","SOL_3","EDL_1","EDL_2","EDL_3")

sample_df <- data.frame(condition = factor(c(rep("SOL",3),rep("EDL",3))))
rownames(sample_df) <- colnames(data1)
deseq <- DESeqDataSetFromMatrix(countData = data1, colData = sample_df, design= ~condition) 
deseq.obj <- DESeq(deseq) 
summary(results(deseq.obj))
deseq.obj.res <- as.data.frame(results(deseq.obj))
results <- cbind(data1,deseq.obj.res)
# write.csv(results,"./DEseq2_gene.csv")

results <- na.omit(results)
results$id <- row.names(results)
write.csv(results,"./DEseq2_gene-136.csv")
for (i in c(1,0.5)){
  dif <- results[abs(results$log2FoldChange)>=i&results$padj<0.05,]
  
  #all
  transcript_dif <- results[abs(results$log2FoldChange)>=i&results$padj<0.05,]
  transcript_up <- transcript_dif[transcript_dif$log2FoldChange>=i&transcript_dif$padj<0.05,]
  transcript_down<- transcript_dif[transcript_dif$log2FoldChange<=-i&transcript_dif$padj<0.05,]
 
  write.csv(transcript_dif,paste("./DEGs/transcript_dif.",i,".padj.csv",sep=""))
  write.table(transcript_dif$id,paste("./DEGs/transcript_dif.",i,".padj.id",sep=""),row.names = F,sep = "\t",col.names=F,quote = FALSE )
  write.csv(transcript_up,paste("./DEGs/transcript_dif_up.",i,".padj.csv",sep=""))
  write.table(transcript_up$id,paste("./DEGs/transcript_dif_up.",i,".padj.id",sep=""),row.names = F,sep = "\t",col.names=F,quote = FALSE )
  write.csv(transcript_down,paste("./DEGs/transcript_dif_down.",i,".padj.csv",sep=""))
  write.table(transcript_down$id,paste("./DEGs/transcript_dif_down.",i,".padj.id",sep=""),row.names = F,sep = "\t",col.names=F,quote = FALSE )
}

for (i in c(1,0.5)){
  dif <- results[abs(results$log2FoldChange)>=i&results$pvalue<0.05,]
  
  #all
  transcript_dif <- results[abs(results$log2FoldChange)>=i&results$pvalue<0.05,]
  transcript_up <- transcript_dif[transcript_dif$log2FoldChange>=i&transcript_dif$pvalue<0.05,]
  transcript_down<- transcript_dif[transcript_dif$log2FoldChange<=-i&transcript_dif$pvalue<0.05,]
  
  write.csv(transcript_dif,paste("./DEGs/transcript_dif.",i,".pvalue.csv",sep=""))
  write.table(transcript_dif$id,paste("./DEGs/transcript_dif.",i,".pvalue.id",sep=""),row.names = F,sep = "\t",col.names=F,quote = FALSE )
  write.csv(transcript_up,paste("./DEGs/transcript_dif_up.",i,".pvalue.csv",sep=""))
  write.table(transcript_up$id,paste("./DEGs/transcript_dif_up.",i,".pvalue.id",sep=""),row.names = F,sep = "\t",col.names=F,quote = FALSE )
  write.csv(transcript_down,paste("./DEGs/transcript_dif_down.",i,".pvalue.csv",sep=""))
  write.table(transcript_down$id,paste("./DEGs/transcript_dif_down.",i,".pvalue.id",sep=""),row.names = F,sep = "\t",col.names=F,quote = FALSE )
}




#####2.counts2TPM
rm(list=ls())
data <- read.csv(file = "./counts.csv",header = T,row.names  = 1,sep=",")
head(data)
dim(data)
countMatrix<-as.matrix(data[,2:10])
rownames(countMatrix)<- row.names(data)
head(countMatrix)
dim(countMatrix)
genelength<-(data$Length)/1000
norcounts<-countMatrix/genelength
head(norcounts)
dim(norcounts)
TPM = t(t(norcounts)/colSums(norcounts)) * 10^6
head(TPM)
write.csv(TPM,"./gene_TPM.csv")
